FileAST:  (at None)
  Typedef: StackElementType, [], ['typedef'] (at C_code_inputs/a10f4_after.c:1:13)
    TypeDecl: StackElementType, [] (at C_code_inputs/a10f4_after.c:1:13)
      IdentifierType: ['int'] (at C_code_inputs/a10f4_after.c:1:9)
  Typedef: StackType, [], ['typedef'] (at C_code_inputs/a10f4_after.c:5:3)
    TypeDecl: StackType, [] (at C_code_inputs/a10f4_after.c:5:3)
      Struct: None (at C_code_inputs/a10f4_after.c:2:1)
        Decl: Top, [], [], [] (at C_code_inputs/a10f4_after.c:3:9)
          TypeDecl: Top, [] (at C_code_inputs/a10f4_after.c:3:9)
            IdentifierType: ['int'] (at C_code_inputs/a10f4_after.c:3:5)
        Decl: Element, [], [], [] (at C_code_inputs/a10f4_after.c:4:22)
          ArrayDecl: [] (at C_code_inputs/a10f4_after.c:4:22)
            TypeDecl: Element, [] (at C_code_inputs/a10f4_after.c:4:22)
              IdentifierType: ['StackElementType'] (at C_code_inputs/a10f4_after.c:4:5)
            ID: StackLimit (at C_code_inputs/a10f4_after.c:4:30)
  Typedef: boolean, [], ['typedef'] (at C_code_inputs/a10f4_after.c:8:3)
    TypeDecl: boolean, [] (at C_code_inputs/a10f4_after.c:8:3)
      Enum: None (at C_code_inputs/a10f4_after.c:6:9)
        EnumeratorList:  (at C_code_inputs/a10f4_after.c:7:5)
          Enumerator: FALSE (at C_code_inputs/a10f4_after.c:7:5)
          Enumerator: TRUE (at C_code_inputs/a10f4_after.c:7:12)
  Decl: CreateStack, [], [], [] (at C_code_inputs/a10f4_after.c:10:6)
    FuncDecl:  (at C_code_inputs/a10f4_after.c:10:6)
      ParamList:  (at C_code_inputs/a10f4_after.c:10:28)
        Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:10:28)
          PtrDecl: [] (at C_code_inputs/a10f4_after.c:10:28)
            TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:10:29)
              IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:10:18)
      TypeDecl: CreateStack, [] (at C_code_inputs/a10f4_after.c:10:6)
        IdentifierType: ['void'] (at C_code_inputs/a10f4_after.c:10:1)
  Decl: EmptyStack, [], [], [] (at C_code_inputs/a10f4_after.c:11:9)
    FuncDecl:  (at C_code_inputs/a10f4_after.c:11:9)
      ParamList:  (at C_code_inputs/a10f4_after.c:11:30)
        Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:11:30)
          TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:11:30)
            IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:11:20)
      TypeDecl: EmptyStack, [] (at C_code_inputs/a10f4_after.c:11:9)
        IdentifierType: ['boolean'] (at C_code_inputs/a10f4_after.c:11:1)
  Decl: FullStack, [], [], [] (at C_code_inputs/a10f4_after.c:12:9)
    FuncDecl:  (at C_code_inputs/a10f4_after.c:12:9)
      ParamList:  (at C_code_inputs/a10f4_after.c:12:29)
        Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:12:29)
          TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:12:29)
            IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:12:19)
      TypeDecl: FullStack, [] (at C_code_inputs/a10f4_after.c:12:9)
        IdentifierType: ['boolean'] (at C_code_inputs/a10f4_after.c:12:1)
  Decl: Push, [], [], [] (at C_code_inputs/a10f4_after.c:13:6)
    FuncDecl:  (at C_code_inputs/a10f4_after.c:13:6)
      ParamList:  (at C_code_inputs/a10f4_after.c:13:21)
        Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:13:21)
          PtrDecl: [] (at C_code_inputs/a10f4_after.c:13:21)
            TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:13:22)
              IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:13:11)
        Decl: Item, [], [], [] (at C_code_inputs/a10f4_after.c:13:46)
          TypeDecl: Item, [] (at C_code_inputs/a10f4_after.c:13:46)
            IdentifierType: ['StackElementType'] (at C_code_inputs/a10f4_after.c:13:29)
      TypeDecl: Push, [] (at C_code_inputs/a10f4_after.c:13:6)
        IdentifierType: ['void'] (at C_code_inputs/a10f4_after.c:13:1)
  Decl: Pop, [], [], [] (at C_code_inputs/a10f4_after.c:14:6)
    FuncDecl:  (at C_code_inputs/a10f4_after.c:14:6)
      ParamList:  (at C_code_inputs/a10f4_after.c:14:20)
        Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:14:20)
          PtrDecl: [] (at C_code_inputs/a10f4_after.c:14:20)
            TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:14:21)
              IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:14:10)
        Decl: Item, [], [], [] (at C_code_inputs/a10f4_after.c:14:45)
          PtrDecl: [] (at C_code_inputs/a10f4_after.c:14:45)
            TypeDecl: Item, [] (at C_code_inputs/a10f4_after.c:14:46)
              IdentifierType: ['StackElementType'] (at C_code_inputs/a10f4_after.c:14:28)
      TypeDecl: Pop, [] (at C_code_inputs/a10f4_after.c:14:6)
        IdentifierType: ['void'] (at C_code_inputs/a10f4_after.c:14:1)
  Decl: TraverseStack, [], [], [] (at C_code_inputs/a10f4_after.c:15:6)
    FuncDecl:  (at C_code_inputs/a10f4_after.c:15:6)
      ParamList:  (at C_code_inputs/a10f4_after.c:15:30)
        Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:15:30)
          TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:15:30)
            IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:15:20)
      TypeDecl: TraverseStack, [] (at C_code_inputs/a10f4_after.c:15:6)
        IdentifierType: ['void'] (at C_code_inputs/a10f4_after.c:15:1)
  FuncDef:  (at C_code_inputs/a10f4_after.c:17:5)
    Decl: main, [], [], [] (at C_code_inputs/a10f4_after.c:17:5)
      FuncDecl:  (at C_code_inputs/a10f4_after.c:17:5)
        TypeDecl: main, [] (at C_code_inputs/a10f4_after.c:17:5)
          IdentifierType: ['int'] (at C_code_inputs/a10f4_after.c:17:1)
    Compound:  (at C_code_inputs/a10f4_after.c:18:1)
      Decl: AStack1, [], [], [] (at C_code_inputs/a10f4_after.c:19:15)
        TypeDecl: AStack1, [] (at C_code_inputs/a10f4_after.c:19:15)
          IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:19:5)
      Decl: AStack2, [], [], [] (at C_code_inputs/a10f4_after.c:19:24)
        TypeDecl: AStack2, [] (at C_code_inputs/a10f4_after.c:19:24)
          IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:19:5)
      Decl: AnItem, [], [], [] (at C_code_inputs/a10f4_after.c:20:22)
        TypeDecl: AnItem, [] (at C_code_inputs/a10f4_after.c:20:22)
          IdentifierType: ['StackElementType'] (at C_code_inputs/a10f4_after.c:20:5)
      Decl: i, [], [], [] (at C_code_inputs/a10f4_after.c:21:9)
        TypeDecl: i, [] (at C_code_inputs/a10f4_after.c:21:9)
          IdentifierType: ['int'] (at C_code_inputs/a10f4_after.c:21:5)
      Decl: n, [], [], [] (at C_code_inputs/a10f4_after.c:21:12)
        TypeDecl: n, [] (at C_code_inputs/a10f4_after.c:21:12)
          IdentifierType: ['int'] (at C_code_inputs/a10f4_after.c:21:5)
      FuncCall:  (at C_code_inputs/a10f4_after.c:22:5)
        ID: CreateStack (at C_code_inputs/a10f4_after.c:22:5)
        ExprList:  (at C_code_inputs/a10f4_after.c:22:18)
          UnaryOp: & (at C_code_inputs/a10f4_after.c:22:18)
            ID: AStack1 (at C_code_inputs/a10f4_after.c:22:18)
      FuncCall:  (at C_code_inputs/a10f4_after.c:23:5)
        ID: CreateStack (at C_code_inputs/a10f4_after.c:23:5)
        ExprList:  (at C_code_inputs/a10f4_after.c:23:18)
          UnaryOp: & (at C_code_inputs/a10f4_after.c:23:18)
            ID: AStack2 (at C_code_inputs/a10f4_after.c:23:18)
      FuncCall:  (at C_code_inputs/a10f4_after.c:25:5)
        ID: printf (at C_code_inputs/a10f4_after.c:25:5)
        ExprList:  (at C_code_inputs/a10f4_after.c:25:12)
          Constant: string, "PLITHOS STOIXEIWN:" (at C_code_inputs/a10f4_after.c:25:12)
      FuncCall:  (at C_code_inputs/a10f4_after.c:26:5)
        ID: scanf (at C_code_inputs/a10f4_after.c:26:5)
        ExprList:  (at C_code_inputs/a10f4_after.c:26:11)
          Constant: string, "%d" (at C_code_inputs/a10f4_after.c:26:11)
          UnaryOp: & (at C_code_inputs/a10f4_after.c:26:18)
            ID: n (at C_code_inputs/a10f4_after.c:26:18)
      For:  (at C_code_inputs/a10f4_after.c:27:5)
        Assignment: = (at C_code_inputs/a10f4_after.c:27:9)
          ID: i (at C_code_inputs/a10f4_after.c:27:9)
          Constant: int, 1 (at C_code_inputs/a10f4_after.c:27:11)
        BinaryOp: <= (at C_code_inputs/a10f4_after.c:27:13)
          ID: i (at C_code_inputs/a10f4_after.c:27:13)
          ID: n (at C_code_inputs/a10f4_after.c:27:16)
        UnaryOp: p++ (at C_code_inputs/a10f4_after.c:27:18)
          ID: i (at C_code_inputs/a10f4_after.c:27:18)
        Compound:  (at C_code_inputs/a10f4_after.c:28:1)
          FuncCall:  (at C_code_inputs/a10f4_after.c:29:9)
            ID: printf (at C_code_inputs/a10f4_after.c:29:9)
            ExprList:  (at C_code_inputs/a10f4_after.c:29:16)
              Constant: string, "DWSE TO %do STOIXEIO:" (at C_code_inputs/a10f4_after.c:29:16)
              ID: i (at C_code_inputs/a10f4_after.c:29:41)
          FuncCall:  (at C_code_inputs/a10f4_after.c:30:9)
            ID: scanf (at C_code_inputs/a10f4_after.c:30:9)
            ExprList:  (at C_code_inputs/a10f4_after.c:30:15)
              Constant: string, "%d" (at C_code_inputs/a10f4_after.c:30:15)
              UnaryOp: & (at C_code_inputs/a10f4_after.c:30:22)
                ID: AnItem (at C_code_inputs/a10f4_after.c:30:22)
          FuncCall:  (at C_code_inputs/a10f4_after.c:31:9)
            ID: Push (at C_code_inputs/a10f4_after.c:31:9)
            ExprList:  (at C_code_inputs/a10f4_after.c:31:15)
              UnaryOp: & (at C_code_inputs/a10f4_after.c:31:15)
                ID: AStack1 (at C_code_inputs/a10f4_after.c:31:15)
              ID: AnItem (at C_code_inputs/a10f4_after.c:31:24)
      FuncCall:  (at C_code_inputs/a10f4_after.c:33:5)
        ID: printf (at C_code_inputs/a10f4_after.c:33:5)
        ExprList:  (at C_code_inputs/a10f4_after.c:33:12)
          Constant: string, "*********1i stoiva***********\n" (at C_code_inputs/a10f4_after.c:33:12)
      FuncCall:  (at C_code_inputs/a10f4_after.c:34:5)
        ID: TraverseStack (at C_code_inputs/a10f4_after.c:34:5)
        ExprList:  (at C_code_inputs/a10f4_after.c:34:19)
          ID: AStack1 (at C_code_inputs/a10f4_after.c:34:19)
      While:  (at C_code_inputs/a10f4_after.c:36:5)
        BinaryOp: > (at C_code_inputs/a10f4_after.c:36:11)
          ID: i (at C_code_inputs/a10f4_after.c:36:11)
          Constant: int, 1 (at C_code_inputs/a10f4_after.c:36:13)
        Compound:  (at C_code_inputs/a10f4_after.c:37:1)
          FuncCall:  (at C_code_inputs/a10f4_after.c:38:9)
            ID: Pop (at C_code_inputs/a10f4_after.c:38:9)
            ExprList:  (at C_code_inputs/a10f4_after.c:38:14)
              UnaryOp: & (at C_code_inputs/a10f4_after.c:38:14)
                ID: AStack1 (at C_code_inputs/a10f4_after.c:38:14)
              UnaryOp: & (at C_code_inputs/a10f4_after.c:38:24)
                ID: AnItem (at C_code_inputs/a10f4_after.c:38:24)
          FuncCall:  (at C_code_inputs/a10f4_after.c:39:9)
            ID: Push (at C_code_inputs/a10f4_after.c:39:9)
            ExprList:  (at C_code_inputs/a10f4_after.c:39:15)
              UnaryOp: & (at C_code_inputs/a10f4_after.c:39:15)
                ID: AStack2 (at C_code_inputs/a10f4_after.c:39:15)
              ID: AnItem (at C_code_inputs/a10f4_after.c:39:24)
          UnaryOp: p-- (at C_code_inputs/a10f4_after.c:40:9)
            ID: i (at C_code_inputs/a10f4_after.c:40:9)
      FuncCall:  (at C_code_inputs/a10f4_after.c:42:5)
        ID: printf (at C_code_inputs/a10f4_after.c:42:5)
        ExprList:  (at C_code_inputs/a10f4_after.c:42:12)
          Constant: string, "*********2i stoiva***********\n" (at C_code_inputs/a10f4_after.c:42:12)
      FuncCall:  (at C_code_inputs/a10f4_after.c:43:5)
        ID: TraverseStack (at C_code_inputs/a10f4_after.c:43:5)
        ExprList:  (at C_code_inputs/a10f4_after.c:43:19)
          ID: AStack2 (at C_code_inputs/a10f4_after.c:43:19)
      Return:  (at C_code_inputs/a10f4_after.c:45:5)
        Constant: int, 0 (at C_code_inputs/a10f4_after.c:45:12)
  FuncDef:  (at C_code_inputs/a10f4_after.c:47:6)
    Decl: CreateStack, [], [], [] (at C_code_inputs/a10f4_after.c:47:6)
      FuncDecl:  (at C_code_inputs/a10f4_after.c:47:6)
        ParamList:  (at C_code_inputs/a10f4_after.c:47:28)
          Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:47:28)
            PtrDecl: [] (at C_code_inputs/a10f4_after.c:47:28)
              TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:47:29)
                IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:47:18)
        TypeDecl: CreateStack, [] (at C_code_inputs/a10f4_after.c:47:6)
          IdentifierType: ['void'] (at C_code_inputs/a10f4_after.c:47:1)
    Compound:  (at C_code_inputs/a10f4_after.c:48:1)
      Assignment: = (at C_code_inputs/a10f4_after.c:49:5)
        StructRef: -> (at C_code_inputs/a10f4_after.c:49:5)
          ID: Stack (at C_code_inputs/a10f4_after.c:49:5)
          ID: Top (at C_code_inputs/a10f4_after.c:49:14)
        UnaryOp: - (at C_code_inputs/a10f4_after.c:49:21)
          Constant: int, 1 (at C_code_inputs/a10f4_after.c:49:21)
  FuncDef:  (at C_code_inputs/a10f4_after.c:52:9)
    Decl: EmptyStack, [], [], [] (at C_code_inputs/a10f4_after.c:52:9)
      FuncDecl:  (at C_code_inputs/a10f4_after.c:52:9)
        ParamList:  (at C_code_inputs/a10f4_after.c:52:30)
          Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:52:30)
            TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:52:30)
              IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:52:20)
        TypeDecl: EmptyStack, [] (at C_code_inputs/a10f4_after.c:52:9)
          IdentifierType: ['boolean'] (at C_code_inputs/a10f4_after.c:52:1)
    Compound:  (at C_code_inputs/a10f4_after.c:53:1)
      Return:  (at C_code_inputs/a10f4_after.c:54:5)
        BinaryOp: == (at C_code_inputs/a10f4_after.c:54:13)
          StructRef: . (at C_code_inputs/a10f4_after.c:54:13)
            ID: Stack (at C_code_inputs/a10f4_after.c:54:13)
            ID: Top (at C_code_inputs/a10f4_after.c:54:19)
          UnaryOp: - (at C_code_inputs/a10f4_after.c:54:27)
            Constant: int, 1 (at C_code_inputs/a10f4_after.c:54:27)
  FuncDef:  (at C_code_inputs/a10f4_after.c:57:9)
    Decl: FullStack, [], [], [] (at C_code_inputs/a10f4_after.c:57:9)
      FuncDecl:  (at C_code_inputs/a10f4_after.c:57:9)
        ParamList:  (at C_code_inputs/a10f4_after.c:57:29)
          Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:57:29)
            TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:57:29)
              IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:57:19)
        TypeDecl: FullStack, [] (at C_code_inputs/a10f4_after.c:57:9)
          IdentifierType: ['boolean'] (at C_code_inputs/a10f4_after.c:57:1)
    Compound:  (at C_code_inputs/a10f4_after.c:58:1)
      Return:  (at C_code_inputs/a10f4_after.c:59:5)
        BinaryOp: == (at C_code_inputs/a10f4_after.c:59:13)
          StructRef: . (at C_code_inputs/a10f4_after.c:59:13)
            ID: Stack (at C_code_inputs/a10f4_after.c:59:13)
            ID: Top (at C_code_inputs/a10f4_after.c:59:19)
          BinaryOp: - (at C_code_inputs/a10f4_after.c:59:27)
            ID: StackLimit (at C_code_inputs/a10f4_after.c:59:27)
            Constant: int, 1 (at C_code_inputs/a10f4_after.c:59:40)
  FuncDef:  (at C_code_inputs/a10f4_after.c:62:6)
    Decl: Push, [], [], [] (at C_code_inputs/a10f4_after.c:62:6)
      FuncDecl:  (at C_code_inputs/a10f4_after.c:62:6)
        ParamList:  (at C_code_inputs/a10f4_after.c:62:21)
          Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:62:21)
            PtrDecl: [] (at C_code_inputs/a10f4_after.c:62:21)
              TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:62:22)
                IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:62:11)
          Decl: Item, [], [], [] (at C_code_inputs/a10f4_after.c:62:46)
            TypeDecl: Item, [] (at C_code_inputs/a10f4_after.c:62:46)
              IdentifierType: ['StackElementType'] (at C_code_inputs/a10f4_after.c:62:29)
        TypeDecl: Push, [] (at C_code_inputs/a10f4_after.c:62:6)
          IdentifierType: ['void'] (at C_code_inputs/a10f4_after.c:62:1)
    Compound:  (at C_code_inputs/a10f4_after.c:63:1)
      If:  (at C_code_inputs/a10f4_after.c:64:5)
        UnaryOp: ! (at C_code_inputs/a10f4_after.c:64:10)
          FuncCall:  (at C_code_inputs/a10f4_after.c:64:10)
            ID: FullStack (at C_code_inputs/a10f4_after.c:64:10)
            ExprList:  (at C_code_inputs/a10f4_after.c:64:21)
              UnaryOp: * (at C_code_inputs/a10f4_after.c:64:21)
                ID: Stack (at C_code_inputs/a10f4_after.c:64:21)
        Compound:  (at C_code_inputs/a10f4_after.c:64:1)
          UnaryOp: p++ (at C_code_inputs/a10f4_after.c:65:9)
            StructRef: -> (at C_code_inputs/a10f4_after.c:65:9)
              ID: Stack (at C_code_inputs/a10f4_after.c:65:9)
              ID: Top (at C_code_inputs/a10f4_after.c:65:18)
          Assignment: = (at C_code_inputs/a10f4_after.c:66:9)
            ArrayRef:  (at C_code_inputs/a10f4_after.c:66:9)
              StructRef: -> (at C_code_inputs/a10f4_after.c:66:9)
                ID: Stack (at C_code_inputs/a10f4_after.c:66:9)
                ID: Element (at C_code_inputs/a10f4_after.c:66:18)
              StructRef: -> (at C_code_inputs/a10f4_after.c:66:26)
                ID: Stack (at C_code_inputs/a10f4_after.c:66:26)
                ID: Top (at C_code_inputs/a10f4_after.c:66:35)
            ID: Item (at C_code_inputs/a10f4_after.c:66:42)
        FuncCall:  (at C_code_inputs/a10f4_after.c:68:9)
          ID: printf (at C_code_inputs/a10f4_after.c:68:9)
          ExprList:  (at C_code_inputs/a10f4_after.c:68:16)
            Constant: string, "Full Stack..." (at C_code_inputs/a10f4_after.c:68:16)
  FuncDef:  (at C_code_inputs/a10f4_after.c:71:6)
    Decl: Pop, [], [], [] (at C_code_inputs/a10f4_after.c:71:6)
      FuncDecl:  (at C_code_inputs/a10f4_after.c:71:6)
        ParamList:  (at C_code_inputs/a10f4_after.c:71:20)
          Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:71:20)
            PtrDecl: [] (at C_code_inputs/a10f4_after.c:71:20)
              TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:71:21)
                IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:71:10)
          Decl: Item, [], [], [] (at C_code_inputs/a10f4_after.c:71:45)
            PtrDecl: [] (at C_code_inputs/a10f4_after.c:71:45)
              TypeDecl: Item, [] (at C_code_inputs/a10f4_after.c:71:46)
                IdentifierType: ['StackElementType'] (at C_code_inputs/a10f4_after.c:71:28)
        TypeDecl: Pop, [] (at C_code_inputs/a10f4_after.c:71:6)
          IdentifierType: ['void'] (at C_code_inputs/a10f4_after.c:71:1)
    Compound:  (at C_code_inputs/a10f4_after.c:72:1)
      If:  (at C_code_inputs/a10f4_after.c:73:5)
        UnaryOp: ! (at C_code_inputs/a10f4_after.c:73:10)
          FuncCall:  (at C_code_inputs/a10f4_after.c:73:10)
            ID: EmptyStack (at C_code_inputs/a10f4_after.c:73:10)
            ExprList:  (at C_code_inputs/a10f4_after.c:73:22)
              UnaryOp: * (at C_code_inputs/a10f4_after.c:73:22)
                ID: Stack (at C_code_inputs/a10f4_after.c:73:22)
        Compound:  (at C_code_inputs/a10f4_after.c:73:1)
          Assignment: = (at C_code_inputs/a10f4_after.c:74:10)
            UnaryOp: * (at C_code_inputs/a10f4_after.c:74:10)
              ID: Item (at C_code_inputs/a10f4_after.c:74:10)
            ArrayRef:  (at C_code_inputs/a10f4_after.c:74:17)
              StructRef: -> (at C_code_inputs/a10f4_after.c:74:17)
                ID: Stack (at C_code_inputs/a10f4_after.c:74:17)
                ID: Element (at C_code_inputs/a10f4_after.c:74:26)
              StructRef: -> (at C_code_inputs/a10f4_after.c:74:34)
                ID: Stack (at C_code_inputs/a10f4_after.c:74:34)
                ID: Top (at C_code_inputs/a10f4_after.c:74:43)
          UnaryOp: p-- (at C_code_inputs/a10f4_after.c:75:9)
            StructRef: -> (at C_code_inputs/a10f4_after.c:75:9)
              ID: Stack (at C_code_inputs/a10f4_after.c:75:9)
              ID: Top (at C_code_inputs/a10f4_after.c:75:18)
        FuncCall:  (at C_code_inputs/a10f4_after.c:77:9)
          ID: printf (at C_code_inputs/a10f4_after.c:77:9)
          ExprList:  (at C_code_inputs/a10f4_after.c:77:16)
            Constant: string, "Empty Stack..." (at C_code_inputs/a10f4_after.c:77:16)
  FuncDef:  (at C_code_inputs/a10f4_after.c:79:6)
    Decl: TraverseStack, [], [], [] (at C_code_inputs/a10f4_after.c:79:6)
      FuncDecl:  (at C_code_inputs/a10f4_after.c:79:6)
        ParamList:  (at C_code_inputs/a10f4_after.c:79:30)
          Decl: Stack, [], [], [] (at C_code_inputs/a10f4_after.c:79:30)
            TypeDecl: Stack, [] (at C_code_inputs/a10f4_after.c:79:30)
              IdentifierType: ['StackType'] (at C_code_inputs/a10f4_after.c:79:20)
        TypeDecl: TraverseStack, [] (at C_code_inputs/a10f4_after.c:79:6)
          IdentifierType: ['void'] (at C_code_inputs/a10f4_after.c:79:1)
    Compound:  (at C_code_inputs/a10f4_after.c:80:1)
      Decl: i, [], [], [] (at C_code_inputs/a10f4_after.c:81:9)
        TypeDecl: i, [] (at C_code_inputs/a10f4_after.c:81:9)
          IdentifierType: ['int'] (at C_code_inputs/a10f4_after.c:81:5)
      For:  (at C_code_inputs/a10f4_after.c:82:5)
        Assignment: = (at C_code_inputs/a10f4_after.c:82:10)
          ID: i (at C_code_inputs/a10f4_after.c:82:10)
          StructRef: . (at C_code_inputs/a10f4_after.c:82:12)
            ID: Stack (at C_code_inputs/a10f4_after.c:82:12)
            ID: Top (at C_code_inputs/a10f4_after.c:82:18)
        BinaryOp: >= (at C_code_inputs/a10f4_after.c:82:22)
          ID: i (at C_code_inputs/a10f4_after.c:82:22)
          Constant: int, 0 (at C_code_inputs/a10f4_after.c:82:25)
        UnaryOp: p-- (at C_code_inputs/a10f4_after.c:82:27)
          ID: i (at C_code_inputs/a10f4_after.c:82:27)
        Compound:  (at C_code_inputs/a10f4_after.c:82:1)
          FuncCall:  (at C_code_inputs/a10f4_after.c:83:9)
            ID: printf (at C_code_inputs/a10f4_after.c:83:9)
            ExprList:  (at C_code_inputs/a10f4_after.c:83:16)
              Constant: string, "%d " (at C_code_inputs/a10f4_after.c:83:16)
              ArrayRef:  (at C_code_inputs/a10f4_after.c:83:22)
                StructRef: . (at C_code_inputs/a10f4_after.c:83:22)
                  ID: Stack (at C_code_inputs/a10f4_after.c:83:22)
                  ID: Element (at C_code_inputs/a10f4_after.c:83:28)
                ID: i (at C_code_inputs/a10f4_after.c:83:36)
      FuncCall:  (at C_code_inputs/a10f4_after.c:85:5)
        ID: printf (at C_code_inputs/a10f4_after.c:85:5)
        ExprList:  (at C_code_inputs/a10f4_after.c:85:12)
          Constant: string, "\n" (at C_code_inputs/a10f4_after.c:85:12)
